// Generated by CoffeeScript 1.6.2
require('ember');

module.exports = Em.Mixin.create({
  template: Em.Handlebars.compile(''),
  init: function() {
    /*
      if @isInline, make view as contenteditable, else make view as textarea
    */

    var isInline, properties;

    isInline = this.get('isInline');
    if (isInline === true) {
      properties = {
        attributeBindings: ['contenteditable'],
        contenteditable: 'true'
      };
    } else {
      properties = {
        tagName: 'textarea',
        classNames: ['ckeditor'],
        attributeBindings: ['name'],
        nameBinding: 'elementId'
      };
    }
    this.setProperties(properties);
    return this._super();
  },
  didInsertElement: function() {
    var context, editor, elementId, isInline, value, _for;

    this._super();
    window.CKEDITOR_BASEPATH = "kelonye-ember-ckedit/ckeditor/";
    require('../ckeditor/ckeditor');
    isInline = this.get('isInline');
    elementId = this.get('elementId');
    if (isInline === true) {
      CKEDITOR.disableAutoInline = true;
      editor = CKEDITOR.inline(elementId);
    } else {
      editor = CKEDITOR.replace(elementId);
    }
    context = this.get('context');
    _for = this.get('for');
    if (_for) {
      value = context.get("" + _for);
      editor.setData(value);
    }
    return context.set('editor', editor);
  },
  willDestroyElement: function() {
    var context, editor;

    context = this.get('context');
    editor = context.get('editor');
    return editor.destroy(false);
  }
});
