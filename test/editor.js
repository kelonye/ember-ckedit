// Generated by CoffeeScript 1.4.0
var editorView, get, post, set;

get = Em.get;

set = Em.set;

post = editorView = void 0;

describe('Editor:', function() {
  beforeEach(function() {
    post = Em.Object.create({
      content: '<p>content</p>'
    });
    editorView = Em.View.create(EditorMixin, {
      valueBinding: 'context.content',
      context: post
    });
    return Em.run(function() {
      return editorView.append();
    });
  });
  afterEach(function() {
    editorView.destroy();
    return post.destroy();
  });
  it("on init editor's data matches bound context attr", function() {
    return assert.equal(get(editorView, 'value'), '<p>content</p>');
  });
  it.skip("editor's value changes when bound context attr changes", function() {
    var content;
    content = '<p>new content</p>';
    Em.run(function() {
      return set(post, 'content', content);
    });
    return assert.equal(get(editorView, 'value'), content);
  });
  return it.skip("bound context attr changes when editor's value changes", function() {
    var content;
    content = 'hey';
    Em.run(function() {
      var editor;
      editor = get(editorView, 'editor');
      console.log(editor);
      return editor.setData(content);
    });
    assert.equal(get(editorView, 'value'), content);
    return assert.equal(get(post, 'content'), content);
  });
});
